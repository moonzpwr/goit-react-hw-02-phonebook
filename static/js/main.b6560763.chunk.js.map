{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Alert/Alert.module.css","Components/ContactList/ContactItem/ContactItem.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","Components/Alert/Alert.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","phonebookActions","addContact","createAction","payload","name","number","id","uuidv4","removeContact","cahngeFilter","Alert","onClickClose","className","s","container","type","btn","onClick","ContactForm","state","isExist","handleSubmit","e","props","contacts","filter","el","length","preventDefault","onAddContact","setState","setTimeout","handleChange","target","value","closeNotification","this","onSubmit","contactName","onChange","submitBtn","CSSTransition","in","unmountOnExit","timeout","classNames","Component","connect","items","dispatch","contact","ContactItem","onClickRemove","contactContainer","deleteBtn","allContacts","toLowerCase","includes","filtredContacts","onRemoveContact","TransitionGroup","component","map","oncahngeFilter","event","filterLabel","appear","createReducer","actions","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","persistReducer","phonebookReducer","store","configureStore","reducer","devTools","process","exportObj","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b6560763.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3VYhc\",\"submitBtn\":\"ContactForm_submitBtn__2cKaE\",\"contactName\":\"ContactForm_contactName__iRZJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__19g2O\",\"btn\":\"Alert_btn__lr6yE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactItem_deleteBtn__2VrvZ\",\"contactContainer\":\"ContactItem_contactContainer__3BuWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__4zIlc\",\"enterActive\":\"ContactList_enterActive__H-MzC\",\"exit\":\"ContactList_exit__3MmYW\",\"exitActive\":\"ContactList_exitActive__1mZY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2zRjv\"};","// import types from './phonebook-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction('phonebook/add', ({ name, number }) => {\r\n    return {\r\n        payload: {\r\n      name: name,\r\n      number: number,\r\n      id: uuidv4()\r\n    }\r\n    }\r\n})\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//       name: name,\r\n//       number: number,\r\n//       id: uuidv4()\r\n//     }\r\n// })\r\n\r\n\r\nconst removeContact =createAction('phonebook/remove')\r\n\r\n// const removeContact = contactId => ({\r\n//     type: types.REMOVE,\r\n//     payload: contactId\r\n// })\r\n\r\n\r\nconst cahngeFilter = createAction('phonebook/changeFilter')\r\n\r\n// const cahngeFilter = (value) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value\r\n// })\r\n\r\nconst phonebookActions = {addContact, removeContact, cahngeFilter}\r\n\r\nexport default phonebookActions","import s from './Alert.module.css'\r\nimport propTypes from 'prop-types'\r\n\r\n\r\nexport default function Alert({onClickClose}) {\r\n    return (\r\n        <div className={s.container}>\r\n            Contact already exist!\r\n             <button type=\"button\" className={s.btn} onClick={onClickClose}>Close</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    onClickClose: propTypes.func.isRequired\r\n}","import { Component } from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport s from './ContactForm.module.css'\r\nimport propTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\r\nimport Alert from '../Alert/Alert'\r\n\r\n\r\nclass ContactForm extends Component { \r\n\r\n    state = {\r\n        name: '',   \r\n        number: '',\r\n        isExist: false\r\n    }\r\n\r\n    handleSubmit = e => { \r\n        if (this.props.contacts.filter(el => el.name === this.state.name).length === 0) {\r\n            e.preventDefault()\r\n            this.props.onAddContact(this.state)\r\n            this.setState({ name: '', number: '' })\r\n            return\r\n        } \r\n        e.preventDefault()\r\n        this.setState({ isExist: true })\r\n        setTimeout(() => {\r\n            this.setState({isExist: false})\r\n        }, 4000)\r\n    }\r\n\r\n    handleChange = e => { \r\n        e.target.type === 'text' ?\r\n        this.setState({\r\n            name: e.target.value       \r\n    }) :  this.setState({\r\n            number: e.target.value       \r\n    })\r\n    }\r\n\r\n    closeNotification = () => {\r\n    this.setState({isExist: false})\r\n  }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n\r\n        return (\r\n            <>\r\n            <form className={s.container} onSubmit={this.handleSubmit}>\r\n                <label className={s.contactName}>Name\r\n                    <input type=\"text\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <label className={s.contactName}>Number\r\n                    <input type=\"tel\"\r\n                    value={number}\r\n                    onChange={this.handleChange}/>\r\n                </label>\r\n                <button\r\n                    type='submit'\r\n                    className={s.submitBtn}\r\n                >Add contact</button>\r\n            </form>\r\n            <CSSTransition\r\n            in={this.state.isExist}\r\n            unmountOnExit\r\n            timeout={250}\r\n            classNames='notification'>\r\n                <Alert onClickClose={this.closeNotification} />\r\n            </CSSTransition>\r\n            </>\r\n        )\r\n        }\r\n  \r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: propTypes.func.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: (contact) => dispatch(phonebookActions.addContact(contact))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import s from './ContactItem.module.css'\r\nimport propTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function ContactItem({ name, number=\"\", onClickRemove, id}) { \r\n    return (\r\n            <li className={s.contactContainer}>\r\n                {name}: {number}\r\n                <button\r\n                    type=\"button\"\r\n                    className={s.deleteBtn}\r\n                    onClick={() => onClickRemove(id)}>\r\n                    Delete\r\n                </button>\r\n            </li>\r\n    )\r\n}\r\n\r\n\r\nContactItem.propTypes = {\r\n    name: propTypes.string.isRequired,\r\n    number: propTypes.string,\r\n    onClickRemove: propTypes.func.isRequired,\r\n    id: propTypes.string,\r\n}\r\n\r\n\r\n\r\n\r\n","import {TransitionGroup, CSSTransition} from 'react-transition-group'\r\nimport propTypes from 'prop-types'\r\nimport ContactItem from './ContactItem/ContactItem'\r\nimport s from \"./ContactList.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\r\n\r\n\r\n\r\nfunction ContactList({ contacts, onRemoveContact }) { \r\n    return (\r\n        <TransitionGroup component='ul' >\r\n            {contacts.map(el => {\r\n                return (\r\n                    <CSSTransition key={el.id} timeout={250} classNames={s}>\r\n                        <ContactItem\r\n                            id={el.id}\r\n                            name={el.name}\r\n                            number={el.number}\r\n                            onClickRemove={onRemoveContact} />\r\n                    </CSSTransition>\r\n                )\r\n            })}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    onRemoveContact: propTypes.func.isRequired,\r\n    contacts: propTypes.arrayOf(propTypes.objectOf(propTypes.string)).isRequired\r\n}\r\n\r\n const filtredContacts = (allContacts, filter) => {\r\n    // const {contacts, filter} = this.state\r\n    return allContacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n\r\n\r\nconst mapStateProps = state => {\r\n    const { items, filter } = state.contacts\r\n    const visibleContacts = filtredContacts(items, filter)\r\n    return {\r\ncontacts: visibleContacts\r\n}\r\n}\r\n\r\nconst mapDispatchprops = dispatch => ({\r\nonRemoveContact: (id) => dispatch(phonebookActions.removeContact(id))\r\n})\r\n\r\nexport default connect(mapStateProps, mapDispatchprops)(ContactList)","import s from \"./Filter.module.css\";\r\nimport propTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter({ value='', oncahngeFilter }) {\r\n    return (\r\n        <div>\r\n            <label className={s.filterLabel}>Find contacts by name\r\n                <input type=\"text\" value={value } onChange={ oncahngeFilter}/>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: propTypes.string,\r\n    oncahngeFilter: propTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    oncahngeFilter: (event) => dispatch(phonebookActions.cahngeFilter(event.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import {CSSTransition} from 'react-transition-group'\r\nimport ContactForm from './Components/ContactForm/ContactForm'\r\nimport ContactList from './Components/ContactList/ContactList'\r\nimport Filter from './Components/Filter/Filter'\r\nimport { connect } from 'react-redux';\r\nimport './App.css'\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n   <div className=\"main-container\">\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames='title'>\r\n        <h1>Phonebook</h1>\r\n      </CSSTransition>\r\n      \r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <CSSTransition\r\n        in={props.contacts.length > 1}\r\n        unmountOnExit\r\n        timeout={250}\r\n        classNames='filter'\r\n        >\r\n        <Filter/>\r\n      </CSSTransition>\r\n\r\n      <ContactList/>\r\n    </div>\r\n  );\r\n  }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items\r\n})\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n// import types from \"./phonebook-types\";\r\nimport actions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, {payload}) => [...state, payload],\r\n    [actions.removeContact]: (state, {payload}) => state.filter(el => el.id !== payload)\r\n})\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n        \r\n//         case types.REMOVE:\r\n//             return state.filter(el => el.id !== payload)\r\n    \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\nconst filter = createReducer('', {\r\n    [actions.cahngeFilter]: (state, {payload}) => payload\r\n})\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case 'phonebook/changeFilter':\r\n//             return payload;\r\n            \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer, FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter']\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}), logger];\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: persistReducer(persistConfig, phonebookReducer)\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: middleware,\r\n    devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\nconst exportObj = {store, persistor}\r\n\r\nexport default exportObj;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n    \n      <App />\n      \n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}