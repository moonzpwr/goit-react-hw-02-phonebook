{"version":3,"sources":["Components/ContactList/ContactItem/ContactItem.module.css","Components/Alert/Alert.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Alert/Alert.jsx","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","type","value","this","className","s","container","onSubmit","contactName","onChange","submitBtn","Component","ContactItem","onClickRemove","id","contactContainer","deleteBtn","onClick","ContactList","contacts","onRemoveContact","TransitionGroup","component","map","el","CSSTransition","timeout","classNames","Filter","oncahngeFilter","filterLabel","Alert","onClickClose","btn","App","filter","isExist","addContact","contact","uuidv4","prevStage","includes","length","setTimeout","closeNotification","removeContact","contactId","prevState","cahngeFilter","filtredContacts","toLowerCase","localStorage","setItem","JSON","stringify","localStoregeContacts","getItem","parse","visibleContacts","in","unmountOnExit","appear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe597060.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactItem_deleteBtn__2VrvZ\",\"contactContainer\":\"ContactItem_contactContainer__3BuWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__19g2O\",\"btn\":\"Alert_btn__lr6yE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__4zIlc\",\"enterActive\":\"ContactList_enterActive__H-MzC\",\"exit\":\"ContactList_exit__3MmYW\",\"exitActive\":\"ContactList_exitActive__1mZY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2zRjv\"};","import { Component } from 'react'\r\nimport s from './ContactForm.module.css'\r\nimport propTypes from 'prop-types'\r\n\r\nexport default class ContactForm extends Component { \r\n\r\n    state = {\r\n        name: '',   \r\n        number: ''\r\n    }\r\n\r\n    handleSubmit = e => { \r\n        e.preventDefault()\r\n        this.props.onAddContact(this.state)\r\n        this.setState({name: '', number: ''})\r\n    }\r\n\r\n    handleChange = e => { \r\n        e.target.type === 'text' ?\r\n        this.setState({\r\n            name: e.target.value       \r\n    }) :  this.setState({\r\n            number: e.target.value       \r\n    })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n\r\n        return (\r\n            <form className={s.container} onSubmit={this.handleSubmit}>\r\n                <label className={s.contactName}>Name\r\n                    <input type=\"text\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <label className={s.contactName}>Number\r\n                    <input type=\"tel\"\r\n                    value={number}\r\n                    onChange={this.handleChange}/>\r\n                </label>\r\n                <button\r\n                    type='submit'\r\n                    className={s.submitBtn}\r\n                >Add contact</button>\r\n            </form>\r\n        )\r\n        }\r\n  \r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: propTypes.func.isRequired\r\n}","import s from './ContactItem.module.css'\r\nimport propTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function ContactItem({ name, number=\"\", onClickRemove, id}) { \r\n    return (\r\n            <li className={s.contactContainer}>\r\n                {name}: {number}\r\n                <button\r\n                    type=\"button\"\r\n                    className={s.deleteBtn}\r\n                    onClick={() => onClickRemove(id)}>\r\n                    Delete\r\n                </button>\r\n            </li>\r\n    )\r\n}\r\n\r\n\r\nContactItem.propTypes = {\r\n    name: propTypes.string.isRequired,\r\n    number: propTypes.string,\r\n    onClickRemove: propTypes.func.isRequired,\r\n    id: propTypes.string,\r\n}\r\n\r\n\r\n\r\n\r\n","import {TransitionGroup, CSSTransition} from 'react-transition-group'\r\nimport propTypes from 'prop-types'\r\nimport ContactItem from './ContactItem/ContactItem'\r\nimport s from \"./ContactList.module.css\";\r\n\r\n\r\n\r\nexport default function ContactList({ contacts, onRemoveContact }) { \r\n    return (\r\n        <TransitionGroup component='ul' >\r\n            {contacts.map(el => {\r\n                return (\r\n                    <CSSTransition key={el.id} timeout={250} classNames={s}>\r\n                        <ContactItem\r\n                            id={el.id}\r\n                            name={el.name}\r\n                            number={el.number}\r\n                            onClickRemove={onRemoveContact} />\r\n                    </CSSTransition>\r\n                )\r\n            })}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    onRemoveContact: propTypes.func.isRequired,\r\n    contacts: propTypes.arrayOf(propTypes.objectOf(propTypes.string)).isRequired\r\n}","import s from \"./Filter.module.css\";\r\nimport propTypes from 'prop-types'\r\n\r\nexport default function Filter({ value='', oncahngeFilter }) {\r\n    return (\r\n        <div>\r\n            <label className={s.filterLabel}>Find contacts by name\r\n                <input type=\"text\" value={value } onChange={ oncahngeFilter}/>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: propTypes.string,\r\n    oncahngeFilter: propTypes.func.isRequired\r\n}","import s from './Alert.module.css'\r\nimport propTypes from 'prop-types'\r\n\r\n\r\nexport default function Alert({onClickClose}) {\r\n    return (\r\n        <div className={s.container}>\r\n            Contact already exist!\r\n             <button type=\"button\" className={s.btn} onClick={onClickClose}>Close</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nAlert.propTypes = {\r\n    onClickClose: propTypes.func.isRequired\r\n}","\r\nimport { Component } from 'react';\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport ContactForm from './Components/ContactForm/ContactForm'\r\nimport ContactList from './Components/ContactList/ContactList'\r\nimport Filter from './Components/Filter/Filter'\r\nimport Alert from './Components/Alert/Alert'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\nstate = {\r\n  contacts: [],\r\n  filter: '',\r\n  isExist: false\r\n}\r\n  \r\n  componentDidUpdate( prevState) { \r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const localStoregeContacts = localStorage.getItem('contacts')\r\n    if (localStoregeContacts) {\r\n      this.setState({contacts: JSON.parse(localStoregeContacts)})\r\n    }\r\n    \r\n  }\r\n  \r\n  addContact = ({name, number}) => { \r\n    const contact = {\r\n      name: name,\r\n      number: number,\r\n      id: uuidv4()\r\n    }\r\n\r\n    this.setState(prevStage => { \r\n      return prevStage.contacts.filter(el => el.name.includes(contact.name)).length > 0 ?\r\n        // alert(`${contact.name} is already in contacts.`):\r\n       {isExist: true} :\r\n        { contacts: [...prevStage.contacts, contact], isExist: false };    \r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.setState({isExist: false})\r\n    }, 4000)\r\n  }\r\n\r\n  closeNotification = () => {\r\n    this.setState({isExist: false})\r\n  }\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(el => el.id !== contactId)\r\n      }\r\n    })\r\n  }\r\n\r\n  cahngeFilter = filter => { \r\n    this.setState({filter: filter.target.value})\r\n  }\r\n\r\n  filtredContacts = () => {\r\n    const {contacts, filter} = this.state\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n\r\n  render() {\r\n    const visibleContacts = this.filtredContacts();\r\n    const { filter, contacts } = this.state;\r\n\r\n return (\r\n   <div className=\"main-container\">\r\n\r\n      <CSSTransition\r\n      in={this.state.isExist}\r\n      unmountOnExit\r\n      timeout={250}\r\n      classNames='notification'>\r\n       <Alert onClickClose={this.closeNotification} />\r\n      </CSSTransition>\r\n\r\n\r\n     <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames='title'>\r\n       <h1>Phonebook</h1>\r\n     </CSSTransition>\r\n    \r\n    <ContactForm onAddContact={this.addContact}/>\r\n\r\n     <h2>Contacts</h2>\r\n     <CSSTransition\r\n       in={contacts.length > 1}\r\n       unmountOnExit\r\n       timeout={250}\r\n       classNames='filter'\r\n       >\r\n      <Filter value={filter} oncahngeFilter={this.cahngeFilter }/>\r\n     </CSSTransition>\r\n    {/* {contacts.length > 1 &&} */}\r\n    <ContactList contacts={visibleContacts} onRemoveContact={this.removeContact}/>\r\n</div>\r\n  );\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3VYhc\",\"submitBtn\":\"ContactForm_submitBtn__2cKaE\",\"contactName\":\"ContactForm_contactName__iRZJ6\"};"],"sourceRoot":""}